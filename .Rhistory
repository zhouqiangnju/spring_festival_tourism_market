geom_sf()+
scale_fill_gradient(name=income,low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "black", breaks = 5)
# visiualization
pal <-
total.income <- ggplot(data=sdm)+
geom_sf()+
scale_fill_gradient(name=sdm$income,low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "black", breaks = 5)
geom_text(data=sdm,aes(label = province),size=3)
total.income
# visiualization
pal <-
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)
total.income
# visiualization
pal <-
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "black", breaks = 5)
total.income
# visiualization
pal <-
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey", breaks = 5)
total.income
?ggthemes
# visiualization
pal <-
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey", breaks = 5)+
theme_economist()
total.income
# visiualization
pal <-
theme_clean <- function(base_size=12){
require(grid)
theme_grey(base_size)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
axis.ticks.length = unit(0, "cm"),
plot.margin = unit(c(0,0,0,0), "lines"),
complete = TRUE
)
}
total.income+ theme_clean()
# visiualization
pal <-
theme_clean <- function(base_size=12){
require(grid)
theme_grey(base_size)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(c(0,0,0,0), "lines"),
complete = TRUE
)
}
total.income+ theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey", breaks = 5)
total.income+ theme_clean()
# visiualization
pal <-
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
)
}
total.income+ theme_clean()
total.income+ theme_clean()+theme_economist()
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey")
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ))+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey")
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = F)+
scale_fill_gradient(low = "#FAB8D2", high = "#F91C74",
guide = "colorbar", na.value = "grey")
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
geom_text(data=sdm,aes(label = province),size=3)
total.income+theme_wsj() + scale_colour_wsj("colors6", "")+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)
total.income+theme_wsj() + scale_colour_wsj("colors6", "")+theme_clean()
install.packages('showtext')
library('showtext')
showtext.auto(enable = TRUE)
showtext_auto()
font.add('SimSun','simsun.ttc')
font_add('SimSun','simsun.ttc')
plot(c(1:10), xlab = '横轴', ylab = '纵轴',
main = '中文标题 Title', family = 'SimSun')
p<-qplot(carat,price,data=diamonds,ylab="纵轴显示",xlab="横轴显示",main="钻石主题图")
library(ggplot2)
p<-qplot(carat,price,data=diamonds,ylab="纵轴显示",xlab="横轴显示",main="钻石主题图")
p+theme(text=element_text(family="SimSun",size=14))
ggplot(data.frame(x = rnorm(100))) +
geom_histogram(aes(x), fill = 'purple', alpha = 0.6) +
labs(x = 'X 取值', y = '频数 Count') +
theme(text = element_text(family = 'SimSun'))
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income ),show.legend = T)+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
setup<-function(){
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library(leaflet)
library(RColorBrewer)
library(ggthemes)
library('showtext')
}
setup()
spri.data <- read.csv('spring_data.csv',stringsAsFactors = FALSE)[,-1]
china.map<-st_read('china.geojson',stringsAsFactors = FALSE)
sdm <- merge(spri.data,china.map,by.x = 'province',by.y = 'name',all = TRUE) %>%
st_sf(stringsAsFactors = FALSE,crs = 4326,sf_column_name = 'geometry')
Encoding(sdm$province)<-'UTF8'
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank()
)
}
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(income) ),show.legend = T)+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income+theme_wsj() + scale_colour_wsj("colors6", "")+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income),show.legend = T)+
ggtitle('2018年春节全国旅游市场')+
gg_
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income),show.legend = T)+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income+theme_wsj() + scale_colour_wsj("colors6", "")+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income+theme_wsj() + scale_colour_wsj("colors6", "")+theme_clean()
font_add('SimSun','simsun.ttc',"SimHei")
font_add('SimSun','simsun.ttc',"KaiTi_GB2312")
library(scales)
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = theme_blank(),
panel.grid = element_blank()
)
}
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income+theme_clean()
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank()
)
}
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun'))
total.income+theme_clean()
brewer_pal()
brewer_pal()
?brewer.all
display.brewer.all
display.brewer.all()
?brewer_pal
show_col(gradient_n_pal(cols)(seq(0, 1, length.out = 30)))
display.brewer.all()
brewer.pal('reds')
brewer.pal(name = 'reds')
brewer.pal(name = 'Reds')
brewer.pal(11,name = 'Reds')
brewer.pal(9,name = 'Reds')
show_col(brewer.pal(9,name = 'Reds'))
pal <- brewer.pal(9,name = 'Reds')
pal <- brewer.pal(9,name = 'Reds')
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_gradient(low = pal[3] , high = pal[7] ,guide = 'colorbar',na.value = 'grey',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_continuous(low = pal[3] , high = pal[7] ,guide = 'colorbar',na.value = 'grey',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
?brewer.all
display.brewer.all(type='seq')
?scale_fill_gradient
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_continuous(low = pal[3] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_gradient(low = pal[3] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_gradient2(low = pal[3] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
pal[3]
df <- data.frame(
x = runif(100),
y = runif(100),
z1 = rnorm(100),
z2 = abs(rnorm(100))
)
ggplot(df, aes(x, y)) +
geom_point(aes(colour = z2))
?scale_fill_gradient
ggplot(df, aes(x, y)) +
geom_point(aes(colour = z1)) +
scale_colour_gradient2()
?scale_fill_brewer
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
d <- ggplot(dsamp, aes(carat, price)) +
geom_point(aes(colour = clarity))
d + scale_colour_brewer()
d
le_colour_brewer()
d + scale_colour_brewer()
?scale_fill_gradient
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_gradient2(low = pal[3] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = income))+
scale_fill_gradient(low = "#FAB8D2" , high = "#F91C74" ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[3] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[4] , high = pal[7] ,guide = 'legend',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))+
legend()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[4] , high = pal[7] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))+
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[4] , high = pal[7] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[7] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[7] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[8] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[8] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_clean()
total.income+theme_clean()+theme_economist()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[8] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 8))
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(low = pal[2] , high = pal[8] ,guide = 'colorbar',title='总收入',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
total.income+theme_economist()+theme_clean()+ theme(legend.position = 'right')
model<-ggplot(sdm)+
total.income <- ggplot()+theme(text = element_text(family='SimSun',size = 9))
model<-ggplot(sdm)+
total.income <- ggplot()+theme(text = element_text(family='SimSun',size = 9))+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[2] , high = pal[8] ,guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
model<-ggplot(sdm)+
total.income <- ggplot()+theme(text = element_text(family='SimSun',size = 9))+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[2] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[2] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
total.income+theme_economist()+theme_clean()
spri.data <- read.csv('spring_data.csv',stringsAsFactors = FALSE)[,-1]
sdm <- merge(spri.data,china.map,by.x = 'province',by.y = 'name',all = TRUE) %>%
st_sf(stringsAsFactors = FALSE,crs = 4326,sf_column_name = 'geometry')
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank()
)
}
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[2] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
total.income+theme_economist()+theme_clean()
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 9))
total.income+theme_economist()+theme_clean()
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场',"总收入")+
theme(text = element_text(family='SimSun',size = 9))
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
?ggtext
ggtext
?element_text
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场',"总收入")+
theme(text = element_text(family='SimSun',size = 12,hjust = 0.5))
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入',low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场',"总收入")+
theme(text = element_text(family='SimSun',size = 15,hjust = 0.5))
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
total.income <- ggplot()+
geom_sf(data = sdm)+
scale_fill_gradient(name='旅游收入(亿元)',aes(fill = as.numeric(sdm$income)),
low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 15,hjust = 0.5))
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
brew.pal.all
display.brewer.all()
pal.income <- brewer.pal(9,name = 'Reds')
pla.gr.i<-brewer.pal(9,name = 'Oranges')
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
model<-ggplot(sdm)+ theme(text = element_text(family='SimSun'))
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
pla.gr.i<-brewer.pal(9,name = 'Oranges')
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
pal.gr.i<-brewer.pal(9,name = 'Oranges')
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
total.income+theme_economist()+theme_clean()+theme(legend.position="right")
gr.i<-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
gr.i <-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[1] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
aftermath<-theme_economist()+theme_clean()+theme(legend.position="right")
gr.i.map<-gr.i+aftermath
gr.i.map
gr.i <-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
gr.i.map<-gr.i+aftermath
gr.i.map
visitor<-model+geom_(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='接待游客',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
visitor<-model+geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='接待游客',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
visitor.map<- visitor+aftermath
total.income <- ggplot()+
geom_sf(data = sdm,aes(fill = as.numeric(sdm$income)))+
scale_fill_gradient(name='旅游收入(亿元)',low = pal[1] , high = pal[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节全国旅游市场')+
theme(text = element_text(family='SimSun',size = 15,hjust = 0.5))
gr.i <-model+geom_sf(aes(fill=as.numeric(sdm$gr.i)))+
scale_fill_gradient(name='收入增长率',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
visitor<-model+geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='接待游客',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
gr.v<-model+geom_sf(aes(fill=as.numeric(sdm$gr.v)))+
scale_fill_gradient(name='游客增长率',low = pal.gr.i[2] , high = pal.gr.i[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
total.income<-total.income+theme_economist()+theme_clean()+theme(legend.position="right")
gr.i.map<-gr.i+aftermath
visitor.map<- visitor+aftermath
gr.v.map<-gr.v+aftermath
gr.v.map
visitor
visitor.map
