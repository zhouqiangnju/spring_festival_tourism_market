lianjie
for(i in 1:51)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",[i],sep=""}
for(i in 1:51)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",i,sep=""}
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",i,sep="")}
lianjie<-paste("a",1:51,sep="")
for(i in 1:51)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",i,sep="")}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:51,sep="")
for(i in 1:51)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",i,sep="")
picture[i]<- read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")
download.file(picture[i],paste("G:/pic/download/down/TQE",i,".jpg",sep = ""), mode = "wb")
}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:51,sep="")
for(i in 1:51)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2406&p=",i,sep="")
read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")%>%download.file(paste("G:/pic/download/TQE",i,".jpg",sep = ""), mode = "wb")
}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:40,sep="")
for(i in 1:40)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2892&p=",i,sep="")
read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")%>%download.file(paste("G:/pic/download/XH",i,".jpg",sep = ""), mode = "wb")
}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:40,sep="")
for(i in 1:40)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=2424&p=",i,sep="")
read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")%>%download.file(paste("G:/pic/download/LF",i,".jpg",sep = ""), mode = "wb")
}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:43,sep="")
for(i in 1:43)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=1188&p=",i,sep="")
read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")%>%download.file(paste("G:/pic/download/YCC",i,".jpg",sep = ""), mode = "wb")
}
library(rvest)
library(downloader)
library(dplyr)
lianjie<-paste("a",1:46,sep="")
for(i in 1:46)
{lianjie[i]<-paste("http://www.uutu.me/index.php?c=Article&id=1379&p=",i,sep="")
read_html(lianjie[i])%>% html_nodes("div.panel-body")%>%html_nodes("img")%>%html_attr("src")%>%download.file(paste("G:/pic/download/XM/XM",i,".jpg",sep = ""), mode = "wb")
}
library(plyr)
library(maptools)
library(ggplot2)
library(plyr)
install.packages("maptools")
library(maptools)
library(ggplot2)
library(plyr)
gpclibPermit()
library(sp)
library(maptools)
library(ggplot2)
library(plyr)
library(sp)
Jiangsu_map<-readShapePoly("C:/Users/Administrator/Documents/R/Map/JIANGSU/江苏.shp")
qplot(Jiangsu_map)
plot(Jiangsu_map)
Shengyulvyou<-readShapePoly("C:/Users/Administrator/Documents/R/Map/JIANGSU/省域旅游.shp")
plot(Shengyulvyou)
x<-Jiangsu_map@data
x<-Jiangsu_map@data
?@
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
string(Jiangsu_map)
str(Jiangsu_map)
as.character(na.omit(unique(x$NAME)))
attributes(Jiangsu_map@data$NAME_0)
ggplot(Jiangsu_map,aes(x=long,y=lat,group=group))+
geom_polygon(fill＝"beige")+
geom_path(colour="grey40")
ggplot(Jiangsu_map,aes(x=long,y=lat,group=group))+
geom_polygon(fill＝"red")+
geom_path(colour="grey40")
ggplot(Jiangsu_map,aes(x=long,y=lat,group=group))+
geom_polygon()+
geom_path(colour="grey40")
ggplot(Jiangsu_map,aes(x=long,y=lat,group=group))+
geom_polygon(lty=2)+
geom_path(colour="grey40")
ggplot(Jiangsu_map,aes(x=long,y=lat,group=group))+
geom_polygon(lty=6)+
geom_path(colour="grey40")
library(ggplot2)
library(ggplot2)
library(sf)
library(shiny)
library(dplyr)
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive',display.mode = "showcase")
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
runApp('R/shiny/reactive/reactive')
setup()
setup<-function(){
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library(leaflet)
library(RColorBrewer)
library(ggthemes)
library('showtext')
library(scales)
}
setup()
showtext_auto()
font_add('SimSun','simsun.ttc')
font_add('fzxbs','C:/Windows/Fonts/方正小标宋_GBK.TTF')
setwd('~/GitHub/spring_festival_tourism_market')
pal.income <- brewer.pal(9,name = 'Reds')
pal.gr.i<-brewer.pal(9,name = 'Oranges')
#prepare data
spri.data <- read.csv('spring_data.csv',stringsAsFactors = FALSE)[,-1]
#input mapfile
china.map<-st_read('china.geojson',stringsAsFactors = FALSE)
Encoding(china.map$name)<-'UTF-8'
#merge files,sdm stands for spring-data-map
sdm <- merge(spri.data,china.map,by.x = 'province',by.y = 'name',all = TRUE) %>%
st_sf(stringsAsFactors = FALSE,crs = 4326,sf_column_name = 'geometry')
sdm$income<-as.numeric(sdm$income)
sdm$gr.i<-as.numeric(sdm$gr.i)
sdm$vistor<-as.numeric(sdm$vistor)
sdm$gr.v<-as.numeric(sdm$gr.v)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='旅游收入（亿元）',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
plot(total.income)
p1<-total.income+frame_1
frame_1<-theme_foundation(base_size=12,base_family = "sans")+
theme_economist()+
theme(legend.position="right")
p1<-total.income+frame_1
p1
theme_clean <- function(base_size=12){
require(grid)
theme(
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank()
)
}
frame_1<-theme_foundation(base_size=12,base_family = "sans")+
theme_clean()+
theme_economist()+
theme(legend.position="right")
p1<-total.income+frame_1
p1
p1<-total.income+frame_1
p1
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
p1<-total.income+frame_1
p1
frame_1<-theme(legend.position="right",
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank())+
theme_foundation(base_size=12,base_family = "sans")+
theme_economist()
p1<-total.income+frame_1
p1
library(grid)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
theme(axis.title.x = element_blank())
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
theme(axis.title.x = element_blank())
plot(total.income)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
theme(axis.title.x = element_blank(),
axis.text = element_blank())
plot(total.income)
frame_1<-theme(legend.position="right",
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank())+
theme_economist()
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
plot(total.income)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
plot(total.income)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='Income',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
plot(total.income)
plot(total.income+frame_1)
frame_1<-theme_economist()+
theme(legend.position="right",
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank())
plot(total.income+frame_1)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位：亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
plot(total.income+frame_1)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
plot(total.income+frame_1)
#don't need
display.brewer.all()
pal.visitor<-brewer.pal(9,name = 'PuRd')
gr.i <-ggplot(sdm)+
geom_sf(aes(fill=gr.i))+
scale_fill_gradient(name='%',low = pal.income[2] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
visitor<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='千万人次',low = pal.visitor[2] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
gr.v<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$gr.v)))+
scale_fill_gradient(name='%',low = pal.visitor[2] , high = pal.visitor[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
p1<-total.income+frame_1
p2<-gr.i+frame_1
p3<-visitor+frame_1
p4<-gr.v+frame_1
p3
visitor<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='万人次',low = pal.visitor[2] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
multiplot(p1, p2, p3, p4, cols=2)
?grid
library(Rmisc)
install.packages('Rmisc')
multiplot(p1, p2, p3, p4, cols=2)
library(Rmisc)
setup<-function(){
library(Rmisc)
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library(leaflet)
library(RColorBrewer)
library(ggthemes)
library('showtext')
library(scales)
library(grid)
}
setup()
multiplot(p1, p2, p3, p4, cols=2)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))
p1<-total.income+frame_1
multiplot(p1, p2, p3, p4, cols=2)
p1<-total.income+frame_1
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
labs('2018年春节全国各省旅游收入')
p1<-total.income+frame_1
p1
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
labs('2018年春节全国各省旅游收入')
p1<-total.income+frame_1
p1
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
labs(title='2018年春节全国各省旅游收入')
p1<-total.income+frame_1
p1
?labs
multiplot(p1, p2, p3, p4, cols=2)+labs(title='2018年春节全国各省旅游收入')
?ggtitle
?theme
p1 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
labs(title = "Fuel economy declines as weight increases")
p1
# Plot ---------------------------------------------------------------------
p1 + theme(plot.title = element_text(size = rel(2)))
p1 + theme(plot.background = element_rect(fill = "green"))
p1 + theme(panel.background = element_rect(fill = "white", colour = "grey50"))
p1 + theme(panel.border = element_rect(linetype = "dashed", fill = NA))
p1 + theme(panel.grid.major = element_line(colour = "black"))
p1 + theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
)
# Put gridlines on top of data
p1 + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
)
# Axes ----------------------------------------------------------------------
p1 + theme(axis.line = element_line(size = 3, colour = "grey80"))
# Put gridlines on top of data
p1 + theme(
panel.background = element_rect(fill = NA),
panel.grid.major = element_line(colour = "grey50"),
panel.ontop = TRUE
)
# Axes ----------------------------------------------------------------------
p1 + theme(axis.line = element_line(size = 3, colour = "grey80"))
p1 + theme(axis.text = element_text(colour = "blue"))
p1 + theme(axis.ticks = element_line(size = 2))
p1 + theme(axis.ticks.length = unit(.25, "cm"))
p1 + theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
# Legend --------------------------------------------------------------------
p2 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(colour = factor(cyl), shape = factor(vs))) +
labs(
x = "Weight (1000 lbs)",
y = "Fuel economy (mpg)",
colour = "Cylinders",
shape = "Transmission"
)
p2
# You can also control the display of the keys
# and the justifaction related to the plot area can be set
p2 + theme(legend.key = element_rect(fill = "white", colour = "black"))
p3 <- ggplot(mtcars, aes(wt, mpg)) +
geom_point() +
facet_wrap(~ cyl)
p3
p3 + theme(strip.background = element_rect(colour = "black", fill = "white"))
p3 + theme(strip.text.x = element_text(colour = "white", face = "bold"))
p3 + theme(panel.spacing = unit(1, "lines"))
frame_1<-theme_economist()+
theme(legend.position="right",
plot.title = element_text(hjust = 0.5),
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank())
?ggtitle
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle(title='2018年春节旅游市场',subtitle='旅游收入')
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游收入')
gr.i <-ggplot(sdm)+
geom_sf(aes(fill=gr.i))+
scale_fill_gradient(name='%',low = pal.income[2] , high = pal.income[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游收入增长率')
visitor<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='万人次',low = pal.visitor[2] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次')
gr.v<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$gr.v)))+
scale_fill_gradient(name='%',low = pal.visitor[2] , high = pal.visitor[8] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次增长率')
p1<-total.income+frame_1
p2<-gr.i+frame_1
p3<-visitor+frame_1
p4<-gr.v+frame_1
multiplot(p1, p2, p3, p4, cols=2)
total.income <-ggplot(sdm)+
geom_sf(aes(fill = income))+
scale_fill_gradient(name='单位:亿元',low = pal.income[1] , high = pal.income[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游收入')
gr.i <-ggplot(sdm)+
geom_sf(aes(fill=gr.i))+
scale_fill_gradient(name='%',low = pal.income[1] , high = pal.income[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游收入增长率')
visitor<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='万人次',low = pal.visitor[1] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次')
gr.v<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$gr.v)))+
scale_fill_gradient(name='%',low = pal.visitor[1] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次增长率')
frame_1<-theme_economist()+
theme(legend.position="right",
axis.title = element_blank(),
axis.text = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank())
p1<-total.income+frame_1
p2<-gr.i+frame_1
p3<-visitor+frame_1
p4<-gr.v+frame_1
multiplot(p1, p2, p3, p4, cols=2)
combine<-multiplot(p1, p2, p3, p4, cols=2)
Cairo.capabilities()
library(Cairo)
Cairo.capabilities()
ggsave('spring-festival.png',multiplot(p1, p2, p3, p4, cols=2),14.22,10.67)
?ggsave
ggsave('spring-festival.png')
multiplot(p1, p2, p3, p4, cols=2)
ggsave('spring-festival.png')
grid.newpage()
pushViewport(viewport(layout = grid.layout(2,2)))
vplayout = function(x,y)viewport(layout.pos.row = x,layout.pos.col = y)
print(p1,vp = vplayout(1,1))
print(p2,vp = vplayout(1,2))
print(p3,vp = vplayout(2,1))
print(p4,vp = vplayout(2,2))
ggsave("test_layout.png")
#don't need
display.brewer.all()
pal.visitor<-brewer.pal(9,name = 'GnBu')
visitor<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$vistor)))+
scale_fill_gradient(name='万人次',low = pal.visitor[1] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次')
gr.v<-ggplot(sdm)+
geom_sf(aes(fill=as.numeric(sdm$gr.v)))+
scale_fill_gradient(name='%',low = pal.visitor[1] , high = pal.visitor[9] ,
guide = 'colorbar',na.value = 'grey50',breaks=pretty_breaks(n=5))+
ggtitle('2018年春节旅游市场',subtitle='旅游人次增长率')
p1<-total.income+frame_1
p2<-gr.i+frame_1
p3<-visitor+frame_1
p4<-gr.v+frame_1
grid.newpage()
pushViewport(viewport(layout = grid.layout(2,2)))
vplayout = function(x,y)viewport(layout.pos.row = x,layout.pos.col = y)
print(p1,vp = vplayout(1,1))
print(p2,vp = vplayout(1,2))
print(p3,vp = vplayout(2,1))
print(p4,vp = vplayout(2,2))
p1<-total.income+frame_1
p1
ggsave(plot = p1, file = "spring.pdf", device = cairo_pdf, family = "Song")
ggsave(plot = p1, file = "spring.pdf", device = cairo_pdf, family = "GB1")
plot(c(1:10), xlab = '横轴', ylab = '纵轴',
main = '中文标题 Title', family = 'SimSun')
plot(c(1:10), xlab = '横轴', ylab = '纵轴',
main = '中文标题 Title', family = 'GB1')
warnings()
